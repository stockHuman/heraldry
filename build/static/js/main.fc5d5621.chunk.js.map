{"version":3,"sources":["components/colors.js","components/escutcheon.js","components/charge.js","components/emoji.js","components/blazon.js","Generator.js","App.js","serviceWorker.js","index.js"],"names":["heraldicColors","tinctures","metals","Math","random","floor","match","name","hex","type","i","length","Shape","shape","id","d","Divisions","division","colors","pattern","fill","clipPath","width","height","x","transform","points","y","Ordinaries","ordinary","kind","Charge","charge","size","color","inverted","textAnchor","style","lineHeight","fontSize","filter","fontFamily","Seme","fillRule","patternUnits","Charges","state","count","alt","placedCharges","maxCharges","chargeSize","placements","isPlain","design","divisions","ordinaries","adjustX","array","direction","adjustment","a","e","adjustY","useAlt","console","log","computedCount","min","c","key","emojis","subset","or","gules","vert","azure","purpure","sable","argent","blazonEmoji","number","data","hasArticle","RegExp","test","replace","blazon","altCharge","chargeCount","colorA","colorB","plain","charges","altCharges","setCharges","max","altsAfter","m","describe","reversedDesign","string","warn","charAt","toUpperCase","slice","Generator","props","seme","emoji","emojiSource","description","randomise","bind","document","addEventListener","this","window","removeEventListener","event","touches","save","arr","setState","svg","getElementsByTagName","saveSvgAsPng","Date","now","version","xmlns","viewBox","enableBackground","data-description","xlinkHref","in","stdDeviation","dx","dy","result","slope","Component","App","className","role","aria-label","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc5d5621.chunk.js","sourcesContent":["// Hand-picked, pretty but innacurate color combinatinos\r\nexport default function colors () {\r\n\tconst colorpairs = [\r\n\t\t['#ebf2fa','#427aa1','#a5be00'],\r\n\t\t['#5e2bff','#f7f6c5','#c04cfd'],\r\n\t\t['#afd2e9','#fcd0a1','#a690a4'],\r\n\t\t['#f4f606','#d7d0f3','#bcf8ec'],\r\n\t\t['#095256','#bb9f06','#208aae'],\r\n\t\t['#abc798','#ffe4fa','#f9ebe0'],\r\n\t\t['#087e8b','#ff5a5f','#3c3c3c'],\r\n\t\t['#3c3c3c','#f5f5f5','#c1839f'],\r\n\t\t['#ffc857','#2e4052','#bdd9bf'],\r\n\t\t['#412234','#ffffff','#ffc857'],\r\n\t\t['#5e2bff','#f5f5f5','#f34213'],\r\n\t\t['#000f08','#e0ca3c','#00b295'],\r\n\t\t['#b7ad99','#faa6ff','#335c67'],\r\n\t\t['#c9daea','#494949','#ff4365'],\r\n\t\t['#00d9c0','#fffff3','#030301'],\r\n\t\t['#008dd5','#dfbbb1','#373f51'],\r\n\t\t['#f56476','#fffff3','#50514f'],\r\n\t\t['#23ce6b','#272d2d','#f6f8ff'],\r\n\t\t['#f2e7c9','#a846a0','#413c58'],\r\n\t\t['#a3c4bc','#bfd7b5','#563f1b'],\r\n\t\t['#345995','#eac435','#03cea4'],\r\n\t\t['#fb4d3d','#f1ffe7','#ca1551'],\r\n\t\t['#6c464e','#a9fdac','#44cf6c'],\r\n\t\t['#d34e24','#f7f052','#32a287'],\r\n\t\t['#000000','#FFFFFF','#F6F2F1']\r\n\t]\r\n\treturn colorpairs[Math.floor(Math.random() * colorpairs.length)]\r\n}\r\n\r\n// Includes only valid tincture / metal combinations and accurate historical colors\r\nexport function heraldicColors () {\r\n\tconst tinctures = [\r\n\t\t'vert',\r\n\t\t'azure',\r\n\t\t'purpure',\r\n\t\t'gules',\r\n\t\t'sable'\r\n\t]\r\n\tconst metals = [\r\n\t\t'Or',\r\n\t\t'argent'\r\n\t]\r\n\r\n\tif (Math.random() > 0.5) {\r\n\t\treturn [\r\n\t\t\ttinctures[Math.floor(Math.random() * 5)],\r\n\t\t\tmetals[Math.floor(Math.random() * 2)]\r\n\t\t]\r\n\t} else {\r\n\t\treturn [\r\n\t\t\tmetals[Math.floor(Math.random() * 2)],\r\n\t\t\ttinctures[Math.floor(Math.random() * 5)]\r\n\t\t]\r\n\t}\r\n}\r\n\r\nexport function match (name) {\r\n\tlet hex, type\r\n\tconst tinctures = [\r\n\t\t['#42c784', 'vert'],\r\n\t\t['#0a47a3', 'azure'],\r\n\t\t['#491984', 'purpure'],\r\n\t\t['#b20505', 'gules'],\r\n\t\t['#0f0f0f', 'sable']\r\n\t]\r\n\tconst metals = [\r\n\t\t['#faf170', 'Or'],\r\n\t\t['#f4f4f4', 'argent']\r\n\t]\r\n\r\n\tfor (let i = 0; i < tinctures.length; i++) {\r\n\t\tif (tinctures[i][1] === name) {\r\n\t\t\thex = tinctures[i][0]\r\n\t\t\ttype = 'tincture'\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < metals.length; i++) {\r\n\t\tif (metals[i][1] === name) {\r\n\t\t\thex = metals[i][0]\r\n\t\t\ttype = 'metal'\r\n\t\t}\r\n\t}\r\n\r\n\treturn { hex, type }\r\n}\r\n","/**\r\n * The foundation of all heraldic arms is the escutcheon or shield.\r\n *\r\n * The base color of the escutcheon is called the field.\r\n * This color can be one of three types: tincture, metal, and fur.\r\n * The field can be divided or may bear an ordinary, and is also\r\n * colored according to one of the three types. European heraldry has a rule here:\r\n * one cannot place a division or ordinary from one color type atop\r\n * the field of the same type. For example, one cannot place a silver division\r\n * atop a gold field, as these are both metals. Finally, the boundary between\r\n * the field and division/ordinary may be modified in several ways\r\n */\r\nimport React from 'react'\r\nimport { match } from './colors'\r\n\r\n\r\nexport function Shape({ type }) {\r\n\tlet shape;\r\n\r\n\tswitch (type) {\r\n\t\tcase 'swiss': shape = \"M8.3,6.4c-0.5,0,98.1,32.3,147.2,32.3S299.2,6.4,302.7,6.4c2.2,0,98.1,32.3,147.2,32.3s145-32.3,147.2-32.3V93 c0,453.1-288,605.9-294.4,605.9c-13.5,0-294.4-150.4-294.4-606V6.4z\";\r\n\t\t\tbreak;\r\n\t\tcase 'french': shape = \"M301.83,704a156.39,156.39,0,0,1,44.6-22c32.49-10.11,56.8-9.41,81-10,76.27-1.87,115.27-2.82,141-23,14.32-11.23,38.61-39.45,34-117V0H.57V532c-4.61,77.55,19.68,105.77,34,117,25.73,20.18,64.73,21.13,141,23,24.2.59,48.51-.11,81,10a156.39,156.39,0,0,1,44.6,22\";\r\n\t\t\tbreak;\r\n\t\tcase 'papal': shape = 'M306.6,692.9c-1.4,2.7-4.8,3.8-7.5,2.2c-0.5-0.3-0.9-0.6-1-1c-19-38.1-50.6-52.1-91.7-50.1 c-24,1.2-48.2-1.2-72.2,0.5c-51,3.6-81.5-30.9-83.6-81.5c-0.3-6.2,0-12.4,0-18.6c0-142.9-0.9-285.7,0.6-428.5 c0.4-40.2-6.6-75-38.2-100c-1.8-1.4-2.5-3.8-1.6-6l0,0c0.3-0.6,0.9-1.6,1.3-1.6c190-0.1,380.1-0.1,572.5-0.1c4.4,0,6.9,5,4.4,8.5 c-0.7,1-1.5,1.9-2.4,2.7c-25.1,23-34.9,51.3-34.7,85.3c0.7,150.6,0.4,301.2,0.1,451.8c0,12.3-1.1,25-4.5,36.7 c-9.1,31.6-34.2,50.3-67.1,50.9c-27.2,0.5-54.4,1.2-81.5-0.1C358.3,642.1,326,654.9,306.6,692.9z';\r\n\t\t\tbreak;\r\n\t\tcase 'spanish': shape = 'M40.4,4.1v434.8h0.2c0,144.1,116.9,261,261,261s261-116.9,261-261h-0.5V4.1H40.4z';\r\n\t\t\tbreak;\r\n\t\tcase 'renaissance': shape = 'M580.9,92.1l-34.4-70.3c-119.1,19.6-159.7-48.7-245-9.4c-85.2-39.3-125.8,29-245.1,9.4L22.1,92.1 c50.4,43.1,32.7,197.6,32.7,361c0,125.2,94.6,249.8,245.7,250.9l0,0c0.3,0,0.6,0,1,0c0.3,0,0.6,0,1,0l0,0 c151.1-1.1,245.7-125.6,245.7-250.9C548.1,289.7,530.5,135.2,580.9,92.1z';\r\n\t\t\tbreak;\r\n\t\tcase 'rn2': shape = 'M118.3,0h364.9c11.6,48.2,40.6,79,100.5,78.8c5.9,206.8-33.4,414.3-280.6,625.2 C89.4,530.6,10.7,317.3,19.4,78.1C64.6,75.1,102.9,59.2,118.3,0z';\r\n\t\t\tbreak;\r\n\r\n\t\tdefault: shape = \"M596.4,6.4c0,0,1.5,196.9,0,295.2c-1.4,94.8-6.1,168.8-48.6,226.7c-51.1,69.7-136.4,120-246.1,169.4 C192,648.2,106.8,597.9,55.6,528.2C13.2,470.4,8.4,396.4,7,301.6C5.6,203.1,5.5,104.7,7,6.4H596.4z\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<clipPath id=\"shieldPath\">\r\n\t\t\t<path id=\"clipMain\" d={ shape } />\r\n\t\t</clipPath>\r\n\t)\r\n}\r\n\r\n\r\nexport function Divisions({ type, colors, pattern = null }) {\r\n\r\n\tlet division\r\n\tlet fill = (pattern) ? `url(#${pattern})` : match(colors[0]).hex\r\n\r\n\tswitch (type) {\r\n\t\tcase 'party per pale': division = (\r\n\t\t\t<g clipPath=\"url(#escutcheon)\">\r\n\t\t\t\t<rect width=\"700\" height=\"800\" fill={match(colors[1]).hex}></rect>\r\n\t\t\t\t<rect width=\"303\" height=\"800\" x=\"301\" fill={ fill }></rect>\r\n\t\t\t</g>\r\n\t\t); break;\r\n\t\tcase 'party per pale indented': division = (\r\n\t\t\t<g clipPath=\"url(#escutcheon)\">\r\n\t\t\t\t<rect width=\"700\" height=\"800\" fill={match(colors[1]).hex}></rect>\r\n\t\t\t\t<polygon transform=\"translate(290)\" fill={fill} points=\"52 0 329 0 329 704 27.5 796 52 704 0 616 52 528 0 440 52 352 0 264 52 176 0 88 52 0 52 0\"/>\r\n\t\t\t</g>\r\n\t\t); break;\r\n\t\tcase 'party per bend': division = (\r\n\t\t\t<g clipPath=\"url(#escutcheon)\">\r\n\t\t\t\t<rect width=\"700\" height=\"800\" fill={match(colors[1]).hex}></rect>\r\n\t\t\t\t<rect width=\"800\" height=\"900\" x=\"0\" fill={ fill } transform=\"rotate(-43)\"></rect>\r\n\t\t\t</g>\r\n\t\t); break;\r\n\t\tcase 'party per fess': division = (\r\n\t\t\t<g clipPath=\"url(#escutcheon)\">\r\n\t\t\t\t<rect width=\"700\" height=\"700\" fill={match(colors[1]).hex}></rect>\r\n\t\t\t\t<rect width=\"700\" height=\"300\" fill={ fill }></rect>\r\n\t\t\t</g>\r\n\t\t); break;\r\n\t\tcase 'party per fess embattled': division = (\r\n\t\t\t<g clipPath=\"url(#escutcheon)\">\r\n\t\t\t\t<rect width=\"700\" height=\"700\" fill={match(colors[1]).hex}></rect>\r\n\t\t\t\t<polygon transform=\"translate(0 300)\" points=\"565.31 55 565.31 0 489.94 0 489.94 55 414.56 55 414.56 0 339.19 0 339.19 55 263.81 55 263.81 0 188.44 0 188.44 55 113.06 55 113.06 0 37.69 0 37.69 55 0 55 0 423 603 423 603 55 565.31 55\" fill={ fill } />\r\n\t\t\t</g>\r\n\t\t); break;\r\n\t\tcase 'party per quartely': division = (\r\n\t\t\t<g clipPath=\"url(#escutcheon)\">\r\n\t\t\t\t<rect width=\"700\" height=\"800\" fill={match(colors[1]).hex}></rect>\r\n\t\t\t\t<rect x=\"-10\" width=\"312\" height=\"360\" fill={ match(colors[0]).hex } />\r\n\t\t\t\t<rect x=\"302\" y=\"360\" width=\"312\" height=\"360\" fill={ fill }/>\r\n\t\t\t</g>\r\n\t\t); break;\r\n\t\tcase 'party per chevron': division = (\r\n\t\t\t<g clipPath=\"url(#escutcheon)\">\r\n\t\t\t\t<rect width=\"700\" height=\"800\" fill={match(colors[1]).hex}></rect>\r\n\t\t\t\t<rect x=\"-48\" y=\"302\" width=\"400\" height=\"400\" fill={fill} transform=\"rotate(-45 391 391)\" />\r\n\t\t\t</g>\r\n\t\t); break;\r\n\t\tdefault: division = ( // plain field\r\n\t\t\t<rect clipPath=\"url(#escutcheon)\" width=\"700\" height=\"800\" fill={ fill }></rect>\r\n\t\t);\r\n\t}\r\n\r\n\treturn division\r\n}\r\n\r\n\r\nexport function Ordinaries({ type, colors, pattern = null }) {\r\n\r\n\tlet ordinary\r\n\tlet fill = (pattern) ? `url(#${pattern})` : match(colors[0]).hex\r\n\r\n\tswitch (type) {\r\n\t\tcase 'bend-sinister': ordinary = (\r\n\t\t\t<rect kind=\"bend\" x=\"-93.5\" y=\"203\" width=\"970\" height=\"136\" transform=\"rotate(-45 391 391)\" fill={ match(colors[1]).hex } />\r\n\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'bend': ordinary = (\r\n\t\t\t<rect kind=\"bend\" x=\"0\" y=\"-70\" width=\"970\" height=\"136\" transform=\"rotate(45)\" fill={ match(colors[1]).hex } />\r\n\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'pale': ordinary = (\r\n\t\t\t<rect kind=\"pale\" x=\"-266\" y=\"467\" width=\"738\" height=\"204\" transform=\"translate(-267.11 472.61) rotate(-90)\" fill={ match(colors[1]).hex } />\r\n\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'cross': ordinary = (\r\n\t\t\t<polygon kind=\"cross\" transform=\"translate(-150 -130)\" points=\"905.52 376.88 529.01 376.88 529.01 0.38 376.88 0.38 376.88 376.88 0.38 376.88 0.38 529.01 376.88 529.01 376.88 905.52 529.01 905.52 529.01 529.01 905.52 529.01 905.52 376.88\" fill={ match(colors[1]).hex } />\r\n\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'saltire': ordinary = (\r\n\t\t\t<polygon kind=\"saltire\" transform=\"translate(-90 -60)\" points=\"783.06 96.75 686.84 0.53 391.8 295.58 96.75 0.53 0.53 96.75 295.58 391.8 0.53 686.84 96.75 783.06 391.8 488.01 686.84 783.06 783.06 686.84 488.01 391.8 783.06 96.75\" fill={ match(colors[1]).hex } />\r\n\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'chief': ordinary = (\r\n\t\t\t<rect kind=\"chief\" x=\"0\" y=\"0\" width=\"970\" height=\"136\" fill={match(colors[1]).hex} />\r\n\t\t);\r\n\t\tbreak;\r\n\t\tcase 'pile': ordinary = (\r\n\t\t\t<polygon points=\"310.5 710 604 0 0 0 310.5 710\" kind=\"pile\" x=\"0\" y=\"0\" fill={match(colors[1]).hex}/>\r\n\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'gyronny': ordinary = (\r\n\t\t\t<g kind=\"gyronny\">\r\n\t\t\t\t<polygon points=\"0 0 301.5 337 301.5 0 0 0\" fill={match(colors[1]).hex}/><polygon points=\"0 704 301.5 337 0 337 0 704\" fill={match(colors[1]).hex}/><polygon points=\"603 704 301.5 337 301.5 704 603 704\" fill={match(colors[1]).hex}/><polygon points=\"603 0 301.5 337 603 337 603 0\" fill={match(colors[1]).hex}/>\r\n\t\t\t</g>\r\n\t\t)\r\n\t\t\tbreak;\r\n\t\tdefault: ordinary = null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<g clipPath=\"url(#escutcheon)\">\r\n\t\t\t<rect width=\"700\" height=\"800\" fill={ fill }></rect>\r\n\t\t\t{ ordinary }\r\n\t\t</g>\r\n\t)\r\n}\r\n\r\n/**\r\n * A charge is any object or figure placed on a heraldic shield\r\n * or on any other object of an armorial composition.\r\n * Any object found in nature or technology may appear\r\n * as a heraldic charge in armory.\r\n * Charges can be animals, objects, or geometric shapes.\r\n */\r\nexport function Charge ({ charge, x = 300, y = 360, size = 140, color = 'sable', inverted = false }) {\r\n\tif (charge) {\r\n\t\treturn (\r\n\t\t\t<text\r\n\t\t\t\tx={x}\r\n\t\t\t\ty={y}\r\n\t\t\t\ttextAnchor=\"middle\"\r\n\t\t\t\tstyle={\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlineHeight: 1,\r\n\t\t\t\t\t\tfontSize: size,\r\n\t\t\t\t\t\tfill: match(color).hex,\r\n\t\t\t\t\t\tfilter: `drop-shadow(0px 0px 5px rgba(0,0,0,0.2))${inverted ? ' invert()' : ''}`,\r\n\t\t\t\t\t\tfontFamily: 'Segoe UI Emoji',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t{ charge }\r\n\t\t\t</text>\r\n\t\t)\r\n\t} else return null\r\n}\r\n\r\n/**\r\n * Most small charges can be depicted as semé, e.g. semé of roses, semé of estoiles, and so forth.\r\n * @param {string} options.type     The named type of pattern, corresponds to ID\r\n * @param {Array}  options.colors   The colors of the whole design, two used in pattern\r\n */\r\nexport function Seme ({ type, colors = ['vert', 'sable', 'argent'] }) {\r\n\r\n\tlet pattern\r\n\tswitch (type) {\r\n\t\tcase 'lozengy': pattern = (\r\n\t\t\t<g>\r\n\t\t\t\t<rect width='30' height='30' fill={match(colors[1]).hex}/>\r\n\t\t\t\t<rect x=\"16\" y=\"-14\" width='28' height='28' transform='rotate(45)' fill={match(colors[2]).hex}/>\r\n\t\t\t</g>\r\n\t\t)\r\n\t\tbreak;\r\n\r\n\t\tcase 'fleur-de-lys': pattern = (\r\n\t\t\t<g>\r\n\t\t\t\t<text style={{ fontSize: 25, fill: match(colors[2]).hex, fontFamily: 'Segoe UI Emoji'}} transform=\"matrix(1 0 0 1 0 25)\">⚜</text>\r\n\t\t\t</g>\r\n\t\t)\r\n\t\tbreak;\r\n\r\n\t\tcase 'barry-dancetty': pattern = (\r\n\t\t<g transform=\"scale(4)\">\r\n\t\t\t<path d=\"M0  0l5  3v5l-5 -3z\" fill={match(colors[2]).hex} />\r\n\t\t\t<path d=\"M10 0l-5 3v5l5  -3\" fill={match(colors[2]).hex} />\r\n\t\t</g>\r\n\t\t)\r\n\t\tbreak;\r\n\r\n\t\tcase 'masoned': pattern = <g fillRule=\"evenodd\"><path fill={match(colors[2]).hex} d=\"M0 0h42v44H0V0zm1 1h40v20H1V1zM0 23h20v20H0V23zm22 0h20v20H22V23z\"/></g>;\r\n\t\tbreak;\r\n\r\n\t\tdefault: pattern = null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<pattern id={ type } width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\r\n\t\t\t<rect width=\"40\" height=\"40\" fill={ match(colors[1]).hex } />\r\n\t\t\t{ pattern }\r\n\t\t</pattern>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Charge } from './escutcheon'\r\n\r\n// this function computes where changes may go, given the design\r\nexport default function Charges({ state, count = 1, alt }) {\r\n\tlet placedCharges = [] // array of <Charges />\r\n\tlet maxCharges = 0 // some designs have a maximum count\r\n\tlet chargeSize = 140 // default for 1 charge\r\n\tlet placements = [] // [] store of possible X/Y values to charges\r\n\tlet isPlain = false // is the shield an open field?\r\n\r\n\tconst { shape, design, divisions, ordinaries, charge } = state\r\n\r\n\t// adjusts placement of charges to fit better on varying shields\r\n\tconst adjustX = (array, direction, adjustment, size = 1) => {\r\n\t\tlet a = array\r\n\r\n\t\tfor (let i = a.length - 1; i >= 0; i--) {\r\n\t\t\tlet e = a[i] // a placement object\r\n\r\n\t\t\tif (direction === 'in') {\r\n\t\t\t\tif (e.x < 300) e.x += adjustment\r\n\t\t\t\tif (e.x > 300) e.x -= adjustment\r\n\t\t\t}\r\n\t\t\tif (direction === 'out') {\r\n\t\t\t\tif (e.x < 300) e.x -= adjustment\r\n\t\t\t\tif (e.x > 300) e.x += adjustment\r\n\t\t\t}\r\n\r\n\t\t\tif (e.size) {\r\n\t\t\t\te.size *= size\r\n\t\t\t}\r\n\t\t\ta[i] = e\r\n\t\t}\r\n\r\n\t\treturn a\r\n\t}\r\n\r\n\tconst adjustY = (array, direction, adjustment) => {\r\n\t\tlet a = array\r\n\r\n\t\tfor (let i = a.length - 1; i >= 0; i--) {\r\n\t\t\tlet e = a[i] // a placement object\r\n\r\n\t\t\tif (direction === 'in') {\r\n\t\t\t\tif (e.y < 350) e.y += adjustment\r\n\t\t\t\tif (e.y > 350) e.y -= adjustment\r\n\t\t\t}\r\n\t\t\tif (direction === 'out') {\r\n\t\t\t\tif (e.y < 350) e.y -= adjustment\r\n\t\t\t\tif (e.y > 350) e.y += adjustment\r\n\t\t\t}\r\n\t\t\tif (direction === '') {\r\n\t\t\t\te.y += adjustment // adjust all in one direction\r\n\t\t\t}\r\n\t\t\ta[i] = e\r\n\t\t}\r\n\r\n\t\treturn a\r\n\t}\r\n\r\n\t// test if the designs have no partitions, given what's enabled\r\n\tif (design === 'divided' && divisions === '') {\r\n\t\tisPlain = true\r\n\t}\r\n\tif (design === 'ordered' && ordinaries === '') {\r\n\t\tisPlain = true\r\n\t}\r\n\r\n\tif (isPlain) {\r\n\t\tmaxCharges = 1\r\n\t\tplacements = [\r\n\t\t\t// central\r\n\t\t\t[ { x: 301, y: 340, size: 200 } ],\r\n\t\t]\r\n\t} else {\r\n\t\t// the field has a design on it\r\n\t\tif (design === 'divided') {\r\n\t\t\tswitch (divisions) {\r\n\t\t\t\t// divides along the middle\r\n\t\t\t\tcase 'party per pale indented':\r\n\t\t\t\tcase 'party per pale':\r\n\t\t\t\t\tplacements = [\r\n\t\t\t\t\t\t// central\r\n\t\t\t\t\t\t[ { x: 300, y: 340, size: 300 } ],\r\n\t\t\t\t\t\t// distrubuted horizontal\r\n\t\t\t\t\t\t[ { x: 160, y: 360 }, { x: 440, y: 360 } ],\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t// three along dexter\r\n\t\t\t\t\t\t\t{ x: 440, y: 175, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 440, y: 350, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 440, y: 525, size: 90 },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t// ante + large on dexter\r\n\t\t\t\t\t\t\t{ x: 160, y: 160, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 160, y: 330, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 160, y: 500, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 440, y: 360, size: 190, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t// ante + 2 large on dexter\r\n\t\t\t\t\t\t\t{ x: 160, y: 160, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 160, y: 330, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 160, y: 500, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 430, y: 232, size: 125, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 430, y: 446, size: 125, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t// 2 columns mirrored\r\n\t\t\t\t\t\t\t{ x: 150, y: 160, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 150, y: 330, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 150, y: 500, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 450, y: 160, size: 90, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 450, y: 330, size: 90, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 450, y: 500, size: 90, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tif (shape === 'swiss' || shape === 'papal') {\r\n\t\t\t\t\t\t// too skinny\r\n\t\t\t\t\t\tplacements[4] = adjustX(placements[4], 'in', 30)\r\n\t\t\t\t\t\tplacements[5] = adjustX(placements[5], 'in', 30)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (shape === 'swiss') {\r\n\t\t\t\t\t\t// too skinny at tip\r\n\t\t\t\t\t\tfor (let i = 1; i < placements.length; i++) {\r\n\t\t\t\t\t\t\tplacements[i] = adjustX(placements[i], 'in', 10)\r\n\t\t\t\t\t\t\tplacements[i] = adjustY(placements[i], 'in', 30)\r\n\t\t\t\t\t\t\tplacements[i] = adjustY(placements[i], '', -30)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmaxCharges = 6\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'party per bend':\r\n\t\t\t\t\tplacements = [\r\n\t\t\t\t\t\t[ { x: 300, y: 335, size: 160 } ],\r\n\t\t\t\t\t\t[ { x: 440, y: 160 }, { x: 160, y: 490, useAlt: true } ],\r\n\t\t\t\t\t\t[ { x: 300, y: 335, size: 160 }, { x: 440, y: 160 }, { x: 160, y: 490, useAlt: true } ],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tif (shape === 'swiss') {\r\n\t\t\t\t\t\tplacements[1] = adjustX(placements[1], 'in', 20)\r\n\t\t\t\t\t\tplacements[1] = adjustY(placements[1], '', 10)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchargeSize = 120\r\n\t\t\t\t\tmaxCharges = 3\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// divides horizontally\r\n\t\t\t\tcase 'party per fess embattled':\r\n\t\t\t\tcase 'party per fess':\r\n\t\t\t\t\tplacements = [\r\n\t\t\t\t\t\t// central\r\n\t\t\t\t\t\t[ { x: 300, y: 360, size: 160 } ],\r\n\t\t\t\t\t\t// distrubuted horizontal in chief\r\n\t\t\t\t\t\t[ { x: 160, y: 200 }, { x: 440, y: 200 } ],\r\n\t\t\t\t\t\t// three horizontal\r\n\t\t\t\t\t\t[ { x: 130, y: 180, size: 100 }, { x: 300, y: 180, size: 100 }, { x: 470, y: 180, size: 100 } ],\r\n\t\t\t\t\t\t// Ante + larger\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{ x: 130, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 470, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 530, size: 200, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t// Ante + larger x2\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{ x: 130, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 470, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 200, y: 500, size: 140, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 400, y: 500, size: 140, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t// Three across fess, three below it\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{ x: 130, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 470, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 180, y: 460, size: 100, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 420, y: 460, size: 100, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 300, y: 560, size: 100, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t// Ante + 1 below\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{ x: 130, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 470, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 180, y: 490, size: 90, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 420, y: 490, size: 90, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 300, y: 590, size: 90, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 300, y: 390, size: 90, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tmaxCharges = 7\r\n\t\t\t\t\tchargeSize = 100\r\n\t\t\t\t\tif (shape === 'papal') {\r\n\t\t\t\t\t\tchargeSize = 120\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (divisions === 'party per fess embattled') {\r\n\t\t\t\t\t\tmaxCharges = 6\r\n\t\t\t\t\t\tplacements[5] = placements[6]\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// divides into quarters\r\n\t\t\t\tcase 'party per quartely':\r\n\t\t\t\t\tplacements = [\r\n\t\t\t\t\t\t// top left\r\n\t\t\t\t\t\t[ { x: 160, y: 200 } ],\r\n\t\t\t\t\t\t// top left x 2\r\n\t\t\t\t\t\t[ { x: 120, y: 170, size: 80 }, { x: 200, y: 250, size: 80 } ],\r\n\t\t\t\t\t\t// top left x 3\r\n\t\t\t\t\t\t[ { x: 110, y: 120, size: 70 }, { x: 210, y: 200, size: 70 }, { x: 110, y: 280, size: 70 } ],\r\n\t\t\t\t\t\t// top left x 4\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{ x: 110, y: 140, size: 60 },\r\n\t\t\t\t\t\t\t{ x: 210, y: 140, size: 60 },\r\n\t\t\t\t\t\t\t{ x: 210, y: 240, size: 60 },\r\n\t\t\t\t\t\t\t{ x: 110, y: 240, size: 60 },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t// ante + alt\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{ x: 110, y: 140, size: 60 },\r\n\t\t\t\t\t\t\t{ x: 210, y: 140, size: 60 },\r\n\t\t\t\t\t\t\t{ x: 210, y: 240, size: 60 },\r\n\t\t\t\t\t\t\t{ x: 110, y: 240, size: 60 },\r\n\t\t\t\t\t\t\t{ x: 450, y: 230, size: 150, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tmaxCharges = 5\r\n\t\t\t\t\tif (shape === 'papal') {\r\n\t\t\t\t\t\tplacements[4] = adjustX(placements[4], 'in', 15)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (shape === '') {\r\n\t\t\t\t\t\tplacements[3] = adjustX(placements[3], 'out', 15)\r\n\t\t\t\t\t\tplacements[4] = adjustX(placements[4], 'out', 15)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// divides horizontally, similarly to per pale\r\n\t\t\t\tcase 'party per chevron':\r\n\t\t\t\t\tplacements = [\r\n\t\t\t\t\t\t// central\r\n\t\t\t\t\t\t[ { x: 300, y: 340, size: 200 } ],\r\n\t\t\t\t\t\t// distrubuted horizontal in chief\r\n\t\t\t\t\t\t[ { x: 160, y: 200 }, { x: 440, y: 200 } ],\r\n\t\t\t\t\t\t// three horizontal\r\n\t\t\t\t\t\t[ { x: 130, y: 180, size: 100 }, { x: 300, y: 180, size: 100 }, { x: 470, y: 180, size: 100 } ],\r\n\t\t\t\t\t\t// Ante + larger\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{ x: 130, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 470, y: 180, size: 100 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 530, size: 120, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tmaxCharges = 4\r\n\t\t\t\t\tchargeSize = 100\r\n\t\t\t\t\tif (shape === 'papal') {\r\n\t\t\t\t\t\tchargeSize = 120\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('No division specified')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (design === 'ordered') {\r\n\t\t\tswitch (ordinaries) {\r\n\t\t\t\t// large cross, little room for othe things\r\n\t\t\t\tcase 'cross':\r\n\t\t\t\t\tplacements = [ [ { x: 300, y: 360 } ] ]\r\n\t\t\t\t\tmaxCharges = 1\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// bar across the top\r\n\t\t\t\tcase 'chief':\r\n\t\t\t\t\tplacements = [\r\n\t\t\t\t\t\t// central\r\n\t\t\t\t\t\t[ { x: 300, y: 370 } ],\r\n\t\t\t\t\t\t// distrubuted horizontal\r\n\t\t\t\t\t\t[ { x: 160, y: 360 }, { x: 440, y: 360 } ],\r\n\t\t\t\t\t\t// three zig-zag in base\r\n\t\t\t\t\t\t[ { x: 160, y: 340 }, { x: 440, y: 340 }, { x: 300, y: 530 } ],\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{ x: 160, y: 105, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 440, y: 105, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 105, size: 90 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 430, size: 260, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tif (shape === 'swiss') {\r\n\t\t\t\t\t\tplacements[3] = adjustX(placements[3], '', 0, 0.7)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmaxCharges = 4\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// line dividing the sides\r\n\t\t\t\tcase 'pale':\r\n\t\t\t\t\tplacements = [\r\n\t\t\t\t\t\t// central\r\n\t\t\t\t\t\t[ { x: 300, y: 340 } ],\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t// two vertically distributed\r\n\t\t\t\t\t\t\t{ x: 300, y: 260 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 450 },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t// three along pale\r\n\t\t\t\t\t\t\t{ x: 300, y: 170 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 360 },\r\n\t\t\t\t\t\t\t{ x: 300, y: 550 },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tchargeSize = 130\r\n\t\t\t\t\tmaxCharges = 3\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// sash\r\n\t\t\t\tcase 'bend':\r\n\t\t\t\t\tplacements = [\r\n\t\t\t\t\t\t[ { x: 300, y: 345, size: 160 } ],\r\n\t\t\t\t\t\t[ { x: 440, y: 160 }, { x: 160, y: 490, useAlt: true } ],\r\n\t\t\t\t\t\t[ { x: 140, y: 170, size: 85 }, { x: 300, y: 325, size: 85 }, { x: 460, y: 490, size: 85 } ],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tif (shape === 'swiss') {\r\n\t\t\t\t\t\tplacements[1] = adjustX(placements[1], 'in', 20)\r\n\t\t\t\t\t\tplacements[1] = adjustY(placements[1], '', 10)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchargeSize = 100\r\n\t\t\t\t\tmaxCharges = 3\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// same but reversed\r\n\t\t\t\tcase 'bend-sinister':\r\n\t\t\t\t\tplacements = [\r\n\t\t\t\t\t\t[ { x: 300, y: 340, size: 160 } ],\r\n\t\t\t\t\t\t[ { x: 190, y: 160, size: 120 }, { x: 440, y: 530, useAlt: true } ],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tchargeSize = 100\r\n\t\t\t\t\tmaxCharges = 2\r\n\t\t\t\t\tif (shape === 'swiss') {\r\n\t\t\t\t\t\tmaxCharges = 1 // few options look good\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'saltire':\r\n\t\t\t\t\tplacements = [ [ { x: 300, y: 380, size: 160 } ] ]\r\n\t\t\t\t\tchargeSize = 100\r\n\t\t\t\t\tmaxCharges = 1\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'gyronny':\r\n\t\t\t\t\tplacements = [ [ { x: 300, y: 390, size: 220 } ] ]\r\n\t\t\t\t\tmaxCharges = 1\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'pile':\r\n\t\t\t\t\tplacements = [\r\n\t\t\t\t\t\t[ { x: 300, y: 340, size: 160 } ],\r\n\t\t\t\t\t\t[ { x: 300, y: 380 }, { x: 300, y: 130, useAlt: true } ],\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{ x: 300, y: 380, size: 160 },\r\n\t\t\t\t\t\t\t{ x: 160, y: 150, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 440, y: 150, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{ x: 300, y: 380, size: 160 },\r\n\t\t\t\t\t\t\t{ x: 130, y: 130, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 300, y: 130, useAlt: true },\r\n\t\t\t\t\t\t\t{ x: 470, y: 130, useAlt: true },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tchargeSize = 100\r\n\t\t\t\t\tmaxCharges = 4\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('No ordinary specified')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// determine the final number of charges to place\r\n\tconst computedCount = Math.min(count, maxCharges)\r\n\r\n\tfor (let i = 0; i < computedCount; i++) {\r\n\t\tlet c\r\n\t\t// allow for alternate charges in some designs\r\n\t\tif (placements[computedCount - 1][i].useAlt && alt) {\r\n\t\t\tc = alt\r\n\t\t} else {\r\n\t\t\tc = charge\r\n\t\t}\r\n\r\n\t\tplacedCharges[i] = (\r\n\t\t\t<Charge\r\n\t\t\t\tsize={placements[computedCount - 1][i].size || chargeSize}\r\n\t\t\t\tx={placements[computedCount - 1][i].x}\r\n\t\t\t\ty={placements[computedCount - 1][i].y}\r\n\t\t\t\tcharge={c[0]}\r\n\t\t\t\tkey={i}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\r\n\treturn <g>{placedCharges}</g>\r\n}\r\n","/**\r\n * Returns an array with elements:\r\n * [0] - the emoji in unicode,\r\n * [1] - a heraldic description, with # as placeholders for plural endings\r\n * [2] - The tincture of the charge\r\n * [3] - An optional plural form if the blazon differs from singular\r\n *\r\n * Words in brackets are to be placed if singular (ie: an avocado)\r\n * Descriptions have been compiled and adapted from many places.\r\n *\r\n * A debt to r/heraldry and to http://roa.sca-caid.org/Royalty.php\r\n * ought be acknowledged. Likewise, one to http://mistholme.com/ for\r\n * the immense body of knowledge they've made freely available.\r\n *\r\n * @since June 2019 - Descriptions match Microsoft Segoe UI Emojis\r\n * @since Aug 2019 = Descriptions match Twitter 'Twemoji' Emojis\r\n *\r\n * @param {string} subset The subset of all emojis that could be retrieved\r\n */\r\nexport default function emojis (subset = 'reccomended') {\r\n\t// allows me to get some syntax highlighting and change the scheme, should I need to\r\n\tlet or = 'or',\r\n\t\tgules = 'gules',\r\n\t\tvert = 'vert',\r\n\t\tazure = 'azure',\r\n\t\tpurpure = 'purpure',\r\n\t\tsable = 'sable',\r\n\t\targent = 'argent'\r\n\tlet e = []\r\n\tif (subset === 'deprecated') {\r\n\t\te = [\r\n\t\t\t['👂', '[an]ear# Or'], // removed as it looks ugly\r\n\t\t\t['🛡️', '[an]escutcheon# azure, party per pale azure', azure], // removed with switch as it broke tincture\r\n\t\t\t['🌫', 'fountain# argent'], // removed after switching to Twitter Emoji\r\n\t\t\t['💁‍♀️', \"maiden's bust# vested purpure, with dexter arm raised and hand splayed fesswise, proper\"], // ugly\r\n\t\t]\r\n\t} else if (subset === 'recommended') {\r\n\t\te = [\r\n\t\t\t['🌞', 'sun# in their splendor', or],\r\n\t\t\t['💘', 'heart# of gules pierced bendwise sinister Or', gules],\r\n \t\t\t['💚', 'heart# of vert', vert],\r\n\t\t\t['💙', 'heart# of azure', azure],\r\n\t\t\t['🖤', 'heart# of sable', sable],\r\n\t\t\t['💛', 'heart# of Or', sable],\r\n\t\t\t['🤍', 'heart# of argent', argent],\r\n\t\t\t['💯', 'one hundred emoji# gules', gules],\r\n\t\t\t['💣', 'bomb# sable', sable],\r\n\t\t\t['🖐', 'hand# palmate Or', or],\r\n\t\t\t['👌', 'OK Hand# Or', or],\r\n\t\t\t['🤘', 'Sign of the Horns Or', or],\r\n\t\t\t['🖕', 'Reversed Hand# With Middle Finger Extended Or', or],\r\n\t\t\t['✊', 'Raised Fist# Or', or],\r\n\t\t\t['🙏', 'Folded Hands Or sleeved azure'],\r\n\t\t\t['⭐', 'mullet# Or', or],\r\n\t\t\t['💪', '[an]arm# embowed fesseways Or', or],\r\n\t\t\t['👁️', '[an]eye# pupiled azure', argent],\r\n\t\t\t['🧜‍♀️', 'mermaid# Or vested gules of hair azure, dexter arm raised', azure],\r\n\t\t\t['🧜‍♂️', 'triton# without trident of hair and scales azure', azure],\r\n\t\t\t['👣', 'footprints gules', gules],\r\n\t\t\t['📖', '[an]open book# proper'],\r\n\t\t\t['🦊', \"fox's head# cabossed proper\"],\r\n\t\t\t['🐻', \"bear's head# cabossed proper\"],\r\n\t\t\t['🐺', \"wolf's head# cabossed argent of eyes and nose sable\"],\r\n\t\t\t['🐮', \"cow's head# cabossed proper\"],\r\n\t\t\t['🌷', 'tulip# slipped and leaved proper'],\r\n\t\t\t['🏵️', 'rosette# or', or],\r\n\t\t\t['💮', 'cherry blossom argent'],\r\n\t\t\t['🍀', 'four-leaf clover# vert', vert],\r\n\t\t\t['🌲', 'pine tree# proper', vert],\r\n\t\t\t['🍍', 'pineapple# bendwise proper', or],\r\n\t\t\t['🍎', '[an]apple# gules', gules],\r\n\t\t\t['🦞', 'lobster# gules', gules],\r\n\t\t\t['🐙', 'polypus affronty purpure', purpure, 'polypi affronty purpure'],\r\n\t\t\t['🗻', 'snow-capped mountain# of base sable and peak argent', sable],\r\n\t\t\t['⚓', '[an]anchor# azure', azure],\r\n\t\t\t['🌚', 'moon# in their plentitude', or], // https://mistholme.com/dictionary/moon/\r\n\t\t\t['☁', 'cloud# argent', argent],\r\n\t\t\t['♦️', 'lozengy gules', gules],\r\n\t\t\t['📯', 'bugle# Or tasselled gules', or],\r\n\t\t\t['💰', 'bag# of money Or, marked sable', or],\r\n\t\t\t['🖋️', 'pen# bendwise sinister sable', sable],\r\n\t\t\t['🗝', 'key# bendwise, wards to sinister sable'],\r\n\t\t\t['🗡️', 'dagger# bendwise inverted'],\r\n\t\t\t['⚔️', 'pair# of swords in saltire proper'],\r\n\t\t\t['🏹', 'bow# fully drawn and charged with arrows, bendwise to chief'],\r\n\t\t\t['🤔', 'thinking face emoji# Or', or],\r\n\t\t\t['⚙️', 'gear# sable', sable],\r\n\t\t\t['⚖️', 'standing balance# Or', or],\r\n \t\t\t['🔗', 'pair# of chainlinks bendwise to chief argent', argent],\r\n\t\t\t['🐬', 'dolphin# sautant azure', azure],\r\n\t\t\t['🖖🏿', \"Moor's Palm# palmate splayed of thumb, middle, and ring proper\"],\r\n\t\t\t['🦉', 'owl# overt guardant proper'],\r\n\t\t\t['⚜️', 'fleur-de-lys purpure', purpure],\r\n\t\t\t['⚫', 'pellet#', sable],\r\n\t\t\t['🔴', 'torteau#', gules],\r\n\t\t\t['🟣', 'golpe#', purpure],\r\n\t\t\t['⚪', 'plate#', argent],\r\n\t\t\t['🟡', 'besant#', or],\r\n\t\t\t['🟢', 'pomme#', vert],\r\n\t\t\t['🧪', 'test tube# bendwise argent filled vert'],\r\n \t\t\t['💎', 'diamond# azure', azure],\r\n\t\t\t['🙃', '[an]upside-down smile emoji# Or', or],\r\n\t\t\t['🥕', 'carrot# bendwise sinister proper'],\r\n\t\t\t['🧺', 'basket# gules', gules],\r\n\t\t\t['🐍', 'coiled snake# ward sinister vert of eye sable and tongue gules', vert],\r\n\t\t\t['🪓', '[an]axe# bendwise'],\r\n\t\t\t['🧅', '[an]onion# Or', or],\r\n\t\t\t['🧄', 'head# of garlic argent', argent],\r\n\t\t\t['🦨', 'skunk# statant proper', sable],\r\n\t\t\t['🐣', 'chick# Or guardant issuant from [an]eggshell# argent'],\r\n\t\t\t['🐓', 'cock#'],\r\n\t\t\t['🐻‍❄️', \"bear's head# cabossed argent eyes sable\", argent],\r\n\t\t\t['🪨', 'rock# argent', argent],\r\n\t\t\t['🍁', 'maple leaf gules', gules, 'maple leaves gules'],\r\n\t\t\t['🌴', 'palm tree# proper'],\r\n\t\t\t['🌿', 'sprig# proper'],\r\n\t\t\t['💀', 'death’s head# argent', argent],\r\n\t\t\t['🔔', 'bell# or', or],\r\n\t\t\t['🦅', '[an]eagle’s head# argent, beaked or, plumed sable', sable],\r\n\t\t\t['🦁', \"lion's head# cabossed proper\"],\r\n\t\t]\r\n\t} else if (subset === 'alt') {\r\n\t\te = [\r\n\t\t\t['😩', 'weary face emoji# Or', or],\r\n\t\t\t['😍', 'heart-eyes emoji# proper', or],\r\n\t\t\t['💩', 'smiling turd emoji# proper'],\r\n\t\t\t['💦', 'trio# of drops falling bendwise azure', azure],\r\n\t\t\t['🍆', '[an]eggplant# purpure', purpure],\r\n\t\t\t['😂', 'laughing crying emoji# proper', or],\r\n\t\t\t['🍑', 'peach fruit# leaved proper'],\r\n\t\t\t['🤑', 'money face emoji# proper', or],\r\n\t\t\t['🥑', 'halved avocado# bendwise proper', vert],\r\n\t\t\t['🧻', 'toilet paper roll# argent', argent],\r\n\t\t\t['🦵', 'leg# embowed Or', or],\r\n\t\t\t['🤠', 'cowboy face# proper', or],\r\n\t\t\t['👽', 'alien head# cabossed argent with eyes sable', argent],\r\n\t\t\t['🍉', 'watermelon slice# tilted bendwise proper'],\r\n\t\t\t['🤡', 'clown face emoji# proper'],\r\n\t\t\t['🎅🏿', 'moorish Santa Claus emoji# proper'],\r\n\t\t\t['🌭', 'hotdog# bendwise proper'],\r\n\t\t\t['🌮', 'taco# fesswise Or, condiments proper', or],\r\n\t\t\t['🦐', 'shrimp embowed gules', gules],\r\n\t\t\t['📜', '[an]open scroll# or', or],\r\n\t\t\t['🐝', 'bee# tergiant proper', argent],\r\n\t\t\t['🏰', 'castle# argent spired azure', argent],\r\n\t\t\t['🩸', 'gout de sang', gules],\r\n\t\t\t['🥺', 'pleading emoji# proper', or]\r\n\t\t]\r\n\t}\r\n\treturn e[Math.floor(Math.random() * e.length)]\r\n}\r\n\r\n/**\r\n * Returns a gramatically correct string parsed from the charge data\r\n * @param {Array} charge an array comprised of an emoji at [0], and a desciprion at [1]\r\n * @param {Number} count Number of charges currently placed in a group\r\n */\r\nexport function blazonEmoji(charge, count = 1) {\r\n\tlet data = charge[1]\r\n\tlet hasArticle = false\r\n\tlet number\r\n\r\n\tswitch (count) {\r\n\t\tcase 2: number = 'two'; break\r\n\t\tcase 3: number = 'three'; break\r\n\t\tcase 4: number = 'four'; break\r\n\t\tcase 5: number = 'five'; break\r\n\t\tcase 6: number = 'six'; break\r\n\t\tcase 7: number = 'seven'; break\r\n\t\tcase 8: number = 'eight'; break\r\n\t\tdefault: number = ''\r\n\t}\r\n\r\n\t// if the charge has a prescribed plural, set it instead.\r\n\tif (charge[3] && count > 1) {\r\n\t\treturn `${number} ${charge[3]}`\r\n\t}\r\n\r\n\tlet a = RegExp(/[[?\\]]/g) // search for [an] or [the]\r\n\tif (a.test(data)) {\r\n\t\thasArticle = true\r\n\t\tif (count === 1) {\r\n\t\t\t// replace brackets with spaces\r\n\t\t\tdata = data.replace(/[[?\\]]/g, ' ')\r\n\t\t} else {\r\n\t\t\t// remove article\r\n\t\t\tdata = data.replace(/\\[([\\d\\w]+)\\]/g, '')\r\n\t\t}\r\n\t}\r\n\r\n\t// string contains '#' to be replaced as a plural placeholder\r\n\tif (RegExp(/#/g).test(data)) {\r\n\t\tif (count === 1) {\r\n\t\t\tif (!hasArticle) {\r\n\t\t\t\t// add 'a' to singular\r\n\t\t\t\tdata = 'a ' + data.replace(/#/g, '')\r\n\t\t\t} else {\r\n\t\t\t\tdata = data.replace(/#/g, '')\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdata = data.replace(/#/g, 's')\r\n\t\t}\r\n\t}\r\n\r\n\treturn `${number} ${data}`\r\n}\r\n","import { blazonEmoji as describe } from './emoji'\r\n\r\n// via https://en.wikipedia.org/wiki/Blazon and\r\n// https://heraldry.sca.org/armory/bruce.html\r\nexport default function blazon (state) {\r\n\tconst { colors, design, divisions, ordinaries, charge, altCharge, chargeCount, shape } = state\r\n\r\n\tconst colorA = colors[0]\r\n\tconst colorB = colors[1]\r\n\r\n\tlet plain = false // no divisions or ordinaries on field\r\n\tlet variation = '' // variations of the field\r\n\tlet charges = 0 // number of regular charges\r\n\tlet altCharges = 0 // number of alternate charges\r\n\tlet blazon = '' // the description of the field et al.\r\n\r\n\t// sets the number of charges and alts given the chargecount\r\n\t// and a point where alternate charges start\r\n\tconst setCharges = (max, altsAfter) => {\r\n\t\tlet c = 0, a = 0, i = 1, m = Math.min(max, chargeCount)\r\n\t\twhile (i <= m) {\r\n\t\t\tif (i < altsAfter) c++ // increment charges\r\n\t\t\telse a++ // increment alternate charges\r\n\t\t\ti++ // don't hang the browser :P\r\n\t\t}\r\n\t\tcharges = c\r\n\t\taltCharges = a\r\n\t}\r\n\r\n\r\n\tif (design === 'divided' && divisions === '') { plain = true }\r\n\tif (design === 'ordered' && ordinaries === '') { plain = true }\r\n\r\n\t/**\r\n\t * NOTE: disabled semees to improve on historical accuracy, design\r\n\t */\r\n\t// if (seme) {\r\n\t// \tswitch (seme) {\r\n\t// \t\tcase 'barry-dancetty': variation = `barry dancetty ${colorC}`; break\r\n\t// \t\tcase 'masoned': variation = `masoned ${colorC}`; break\r\n\t// \t\tcase 'fleur-de-lys': variation = `semé-de-lys Or`; break\r\n\t// \t\t// no default\r\n\t// \t}\r\n\t// }\r\n\r\n\t// determine field\r\n\tif (plain) {\r\n\t\tblazon = `${variation ? variation : colorA}, ${describe(charge)}`\r\n\t} else {\r\n\t\tif (design === 'divided') {\r\n\t\t\tlet d = ''\r\n\t\t\tswitch (divisions) {\r\n\t\t\t\tcase 'party per pale':\r\n\t\t\t\t\tsetCharges(6, 4)\r\n\t\t\t\t\td = `Per pale ${colorB} and ${colorA}, `;\r\n\t\t\t\t\tif (chargeCount === 1) {\r\n\t\t\t\t\t\td += `overtop ${describe(charge)}`\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\td += `in sinister ${describe(charge, charges)}`\r\n\t\t\t\t\t\tif (chargeCount > 3) {\r\n\t\t\t\t\t\t\td += `, in dexter ${describe(altCharge, altCharges)}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'party per pale indented':\r\n\t\t\t\t\tsetCharges(6, 4)\r\n\t\t\t\t\td = `Per pale indented ${colorB} and ${colorA}, `;\r\n\t\t\t\t\tif (chargeCount === 1) {\r\n\t\t\t\t\t\td += `overtop ${describe(charge)}`\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\td += `in sinister ${describe(charge, charges)}`\r\n\t\t\t\t\t\tif (chargeCount > 3) {\r\n\t\t\t\t\t\t\td += `, in dexter ${describe(altCharge, altCharges)}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'party per fess':\r\n\t\t\t\t\tsetCharges(7, 4)\r\n\t\t\t\t\td = `Per bend ${colorA} and ${colorB}, `\r\n\t\t\t\t\tif (chargeCount === 1) {\r\n\t\t\t\t\t\td += `overtop ${describe(charge)}`\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\td += `in chief ${describe(charge, charges)}`\r\n\t\t\t\t\t\tif (chargeCount > 3) {\r\n\t\t\t\t\t\t\td += `, in base ${describe(altCharge, altCharges)}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\r\n\t\t\t\tcase 'party per bend':\r\n\t\t\t\t\tsetCharges(6, 4)\r\n\t\t\t\t\td = `Per fess ${colorA} and ${colorB}, `\r\n\t\t\t\t\tif (chargeCount === 1) {\r\n\t\t\t\t\t\td += `overtop ${describe(charge)}`\r\n\t\t\t\t\t} else if (chargeCount === 2) {\r\n\t\t\t\t\t\td += `in dexter ${describe(charge)}, in sinister ${describe(altCharge)}`\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\td += `overtop ${describe(charge)}, `\r\n\t\t\t\t\t\t+ `in dexter ${describe(charge)}, in sinister ${describe(altCharge)}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'party per fess embattled':\r\n\t\t\t\t\tsetCharges(6, 4)\r\n\t\t\t\t\td = `Per fess embattled ${colorA} and ${colorB}, `\r\n\t\t\t\t\tif (chargeCount === 1) {\r\n\t\t\t\t\t\td += `overtop ${describe(charge)}`\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\td += `in chief ${describe(charge, charges)}`\r\n\t\t\t\t\t\tif (chargeCount > 3) {\r\n\t\t\t\t\t\t\td += `, in base ${describe(altCharge, altCharges)}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'party per quartely':\r\n\t\t\t\t\tsetCharges(5, 5)\r\n\t\t\t\t\td = `Quarterly, I ${colorA}, ${describe(charge, charges)},`\r\n\t\t\t\t\tif (chargeCount > 4) {\r\n\t\t\t\t\t\td += ` II ${colorB}, ${describe(altCharge, altCharges)},`\r\n\t\t\t\t\t\td += ` III ${colorB}, IV ${colorA}`\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\td += ` II and III ${colorB}, IV ${colorA}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'party per chevron':\r\n\t\t\t\t\tsetCharges(4, 4)\r\n\t\t\t\t\tif (chargeCount === 1) {\r\n\t\t\t\t\t\t// This could be blazoned differently, but most emoji render as the central, primary charge\r\n\t\t\t\t\t\td = `${colorB}, ${describe(charge)} above a chevron ${colorA}`\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\td = `Per chevron ${colorA} and ${colorB}, ${describe(charge, charges)} per fess`\r\n\t\t\t\t\t\tif (chargeCount > 3) {\r\n\t\t\t\t\t\t\td += `, in chevron ${describe(altCharge)}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\t// no default\r\n\t\t\t}\r\n\t\t\tblazon = `${d}`\r\n\t\t} else if (design === 'ordered') {\r\n\t\t\tlet d = (ordinaries === 'gyronny') ? '' : `${colorA}, `\r\n\t\t\tswitch (ordinaries) {\r\n\t\t\t\tcase 'saltire':\r\n\t\t\t\t\td += `a saltire ${colorB} charged with ${describe(charge)}`;\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'bend':\r\n\t\t\t\t\tif (chargeCount === 1) {\r\n\t\t\t\t\t\td += `a bend ${colorB}, overall ${describe(charge)}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (chargeCount === 2) {\r\n\t\t\t\t\t\td += `a bend ${colorB} between in chief ${describe(charge)} and in base ${describe(altCharge)}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (chargeCount >= 3 && (shape !== 'swiss' || shape !== 'rn2')) {\r\n\t\t\t\t\t\td += `in a bend ${colorB}, ${describe(charge, 3)}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'bend-sinister':\r\n\t\t\t\t\tsetCharges(2, 1)\r\n\t\t\t\t\tif (chargeCount === 1) {\r\n\t\t\t\t\t\td += `a bend sinister ${colorB}, overall ${describe(charge)}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (chargeCount > 1) {\r\n\t\t\t\t\t\td += `a bend sinister ${colorB} between in chief ${describe(charge)} and in base ${describe(altCharge)}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'pale':\r\n\t\t\t\t\tsetCharges(3, 9)\r\n\t\t\t\t\td += `in a pale ${colorB}, ${describe(charge, charges)}`\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'cross':\r\n\t\t\t\t\td += `a cross ${colorB}, ${describe(charge)}`\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'chief':\r\n\t\t\t\t\tsetCharges(4, 4)\r\n\t\t\t\t\tlet reversedDesign = chargeCount >= 4 ? true : false\r\n\t\t\t\t\td += `${describe(reversedDesign ? altCharge : charge, reversedDesign ? altCharges : charges)}`\r\n\t\t\t\t\tif (chargeCount <= 3) {\r\n\t\t\t\t\t\td += `, a chief ${colorB}`\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\td += `, in chief ${describe(charge, 3)}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'pile':\r\n\t\t\t\t\tsetCharges(2, 1)\r\n\t\t\t\t\td += `in a pile ${colorB} ${describe(charge, 1)}`\r\n\t\t\t\t\tif (chargeCount > 1) {\r\n\t\t\t\t\t\td += `, in chief ${describe(altCharge, altCharges)}`\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'gyronny':\r\n\t\t\t\t\tsetCharges(1, 1)\r\n\t\t\t\t\td += `Gyronny ${colorB} and ${colorA}, ${describe(charge, 1)}`\r\n\r\n\t\t\t\t\tbreak\r\n\t\t\t\t// no default\r\n\t\t\t}\r\n\t\t\tblazon = `${d}`\r\n\t\t}\r\n\t}\r\n\r\n\t// capitalizes first letter and trims double spaces\r\n\tconst prep = string => {\r\n\t\tstring = string.replace(/(\\s)+/g, ' ') // catch double spaces\r\n\t\tif (string.length > 280) { console.warn('String too long for twitter!') }\r\n\t\treturn string.charAt(0).toUpperCase() + string.slice(1)\r\n\t}\r\n\r\n\treturn prep(blazon)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { saveSvgAsPng } from 'save-svg-as-png'\r\n\r\nimport { Shape, Divisions, Ordinaries, Seme } from './components/escutcheon'\r\nimport { heraldicColors as colors } from './components/colors'\r\nimport Charges from './components/charge'\r\nimport emoji from './components/emoji'\r\nimport blazon from './components/blazon'\r\n\r\nexport default class Generator extends Component {\r\n\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tshape: 'french',\r\n\t\t\tdesign: 'divided',\r\n\t\t\tdivisions: 'party per bend',\r\n\t\t\tordinaries: '',\r\n\t\t\tseme: '',\r\n\t\t\tchargeCount: 2,\r\n\t\t\tcharge: emoji('recommended'),\r\n\t\t\taltCharge: emoji('alt'),\r\n\t\t\tcolors: ['vert', 'argent', 'sable'],\r\n\t\t\temojiSource: 'recommended',\r\n\t\t\tdescription: ''\r\n\t\t}\r\n\t\tthis.randomise = this.randomise.bind(this)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener('keydown', this.randomise)\r\n\t\tdocument.addEventListener('click', this.randomise)\r\n\t\twindow.addEventListener('touchstart', this.randomise)\r\n\t\tthis.randomise()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\t\tdocument.removeEventListener('keydown', this.randomise)\r\n\t\tdocument.removeEventListener('click', this.randomise)\r\n\t\twindow.removeEventListener('touchstart', this.randomise)\r\n\t}\r\n\r\n\trandomise (event) {\r\n\t\t// catch the 's' key / two finger tap and save instead of randomising\r\n\t\tif (event && ((event.touches && event.touches.length === 2) || event.key === 's')) {\r\n\t\t\tthis.save()\r\n\t\t} else {\r\n\t\t\tconst random = arr => arr[Math.floor(Math.random() * arr.length)]\r\n\r\n\t\t\tconst shapes = [\r\n\t\t\t\t'', // default, old french\r\n\t\t\t\t'swiss',\r\n\t\t\t\t'french',\r\n\t\t\t\t'papal',\r\n\t\t\t\t'spanish',\r\n\t\t\t\t'renaissance',\r\n\t\t\t\t'rn2'\r\n\t\t\t]\r\n\t\t\tconst divisions = [\r\n\t\t\t\t'', // default, solid field\r\n\t\t\t\t'party per bend',\r\n\t\t\t\t'party per pale',\r\n\t\t\t\t'party per fess',\r\n\t\t\t\t'party per quartely',\r\n\t\t\t\t'party per chevron',\r\n\t\t\t\t'party per pale indented',\r\n\t\t\t\t'party per fess embattled',\r\n\t\t\t]\r\n\t\t\tconst ordinaries = [\r\n\t\t\t\t'', // default, solid field\r\n\t\t\t\t'cross',\r\n\t\t\t\t'pale',\r\n\t\t\t\t'bend',\r\n\t\t\t\t'bend-sinister',\r\n\t\t\t\t'chief',\r\n\t\t\t\t'saltire',\r\n\t\t\t\t'pile',\r\n\t\t\t\t'gyronny',\r\n\t\t\t]\r\n\t\t\tconst designs = ['ordered', 'divided']\r\n\t\t\tconst patterns = [\r\n\t\t\t\t'', // disabled semees for now\r\n\t\t\t\t// 'fleur-de-lys',\r\n\t\t\t\t// 'barry-dancetty',\r\n\t\t\t\t// 'masoned',\r\n\t\t\t\t// 'lozengy'\r\n\t\t\t]\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tshape: random(shapes),\r\n\t\t\t\tdesign: random(designs),\r\n\t\t\t\tdivisions: random(divisions),\r\n\t\t\t\tordinaries: random(ordinaries),\r\n\t\t\t\tseme: random(patterns),\r\n\t\t\t\tchargeCount: Math.max(1, Math.floor(Math.random() * 10)),\r\n\t\t\t\tcharge: emoji(this.state.emojiSource),\r\n\t\t\t\taltCharge: emoji('alt'),\r\n\t\t\t\tcolors: colors(),\r\n\t\t\t})\r\n\r\n\t\t\t// DEBUG\r\n\t\t\t// this.setState({\r\n\t\t\t// \tshape: '',\r\n\t\t\t// \tdesign: 'ordered',\r\n\t\t\t// \tdivisions: '',\r\n\t\t\t// \tordinaries: 'gyronny',\r\n\t\t\t// \tchargeCount:  Math.max(1, Math.floor(Math.random() * 6)),\r\n\t\t\t// \tcharge: emoji(this.state.emojiSource),\r\n\t\t\t// \taltCharge: emoji('alt'),\r\n\t\t\t// \tcolors: colors(),\r\n\t\t\t// })\r\n\r\n\t\t\t// State must be set to properly blazon\r\n\t\t\tthis.setState({ description: blazon(this.state) })\r\n\t\t}\r\n\t}\r\n\r\n\tasync save () {\r\n\t\tconst svg = document.getElementsByTagName('svg')[0]\r\n\r\n\t\tawait saveSvgAsPng(svg, `eschucheon_${Date.now()}.png`)\r\n\t}\r\n\r\n\trender () {\r\n\t\tconst {\r\n\t\t\tshape,\r\n\t\t\tchargeCount,\r\n\t\t\taltCharge,\r\n\t\t\tcolors,\r\n\t\t\tseme,\r\n\t\t\tdivisions,\r\n\t\t\tordinaries,\r\n\t\t\tdesign,\r\n\t\t\tdescription\r\n\t\t} = this.state\r\n\r\n\t\treturn (\r\n\t\t\t<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" id=\"shield\"\r\n\t\t\t viewBox=\"0 0 603 704\" enableBackground=\"new 0 0 603 704\" data-description={description}>\r\n\t\t\t\t<clipPath id=\"escutcheon\"><use xlinkHref=\"#clipMain\"/></clipPath>\r\n\t\t\t\t<use clipPath=\"url(#shieldPath)\" />\r\n\r\n\t\t\t\t<defs>\r\n\t\t\t\t\t<Shape type={shape} />\r\n\t\t\t\t\t<Seme type={seme} colors={colors} />\r\n\t\t\t\t</defs>\r\n\r\n\t\t\t\t{ design === 'ordered'\r\n\t\t\t\t\t? <Ordinaries type={ordinaries} colors={colors} pattern={seme} />\r\n\t\t\t\t\t: <Divisions type={divisions} colors={colors} pattern={seme} />\r\n\t\t\t\t}\r\n\t\t\t\t<Charges state={this.state} count={chargeCount} alt={altCharge}/>\r\n\t\t\t\t<filter id=\"dropshadow\" height=\"130%\">\r\n\t\t\t\t\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"2\"/>\r\n\t\t\t\t\t<feOffset dx=\"0\" dy=\"0\" result=\"offsetblur\"/>\r\n\t\t\t\t\t<feComponentTransfer>\r\n\t\t\t\t\t\t<feFuncA type=\"linear\" slope=\"0.5\"/>\r\n\t\t\t\t\t</feComponentTransfer>\r\n\t\t\t\t\t<feMerge>\r\n\t\t\t\t\t\t<feMergeNode/>\r\n\t\t\t\t\t\t<feMergeNode in=\"SourceGraphic\"/>\r\n\t\t\t\t\t</feMerge>\r\n\t\t\t\t</filter>\r\n\t\t\t</svg>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nimport Generator from './Generator'\r\nimport './assets/css/App.css'\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<main>\r\n\t\t\t\t<span role=\"img\" aria-label=\"crown\">👑</span>\r\n\t\t\t\t<Generator />\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}